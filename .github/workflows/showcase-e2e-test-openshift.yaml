name: Showcase-e2e-test-openshift

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  OPENSHIFT_NAMESPACE : ${{ secrets.OPENSHIFT_NAMESPACE }}
  OPENSHIFT_SERVER : ${{ secrets.OPENSHIFT_SERVER }}
  PROJECT_ID : ${{ secrets.PROJECT_ID }}

jobs:
  test: 
    name: Run Cypress Tests for Backstage
    strategy:
      fail-fast: true
      matrix:
          os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    
    steps:
    - name: Check out code into the working directory
      uses: actions/checkout@v3

    - name: Install oc if not Linux
      id: install_oc
      if: "runner.os != 'Linux'"
      uses: redhat-actions/openshift-tools-installer@v1
      with:
        oc: latest
        skip_cache: ${{ matrix.cache }}

    - name: Check oc install
      shell: bash
      run: |
          set -x
          oc version --client

    - name: Log in by using an service ID api-key and set project
      shell: bash
      run: |
          oc login -u apikey -p ${{ secrets.API_KEY_QE }} --server=$OPENSHIFT_SERVER
          oc project $OPENSHIFT_NAMESPACE

    - name: Install wait-on
      run: npm install -g wait-on 
      shell: bash
    
    - name: Install Backstage helm chart
      uses: WyriHaximus/github-action-helm3@v3
      with:
        exec: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add backstage https://backstage.github.io/charts
          helm repo add janus-idp https://janus-idp.github.io/helm-backstage
          helm repo update
          helm upgrade -i backstage janus-idp/backstage -f ./helm/values-openshift-route.yaml -n $OPENSHIFT_NAMESPACE
          
    - name: Run port-forward
      run: |
        sleep 45s
        oc port-forward -n $OPENSHIFT_NAMESPACE svc/backstage-upstream 7007:http-backend &
      shell: bash
    - name: Run tests
      uses: cypress-io/github-action@v5
      with:
        browser: chrome 
        wait-on: 'http://localhost:7007'
        wait-on-timeout: 120
        working-directory: app-test
        spec: cypress/e2e/*.ts
      env:
          # pass GitHub token to detect new build vs re-run build
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          # pass the project ID from the secrets through environment variable
          CYPRESS_PROJECT_ID: $PROJECT_ID
    - name: Clean up by uninstalling Backstage helm chart
      uses: WyriHaximus/github-action-helm3@v3
      if: always()
      with:
        exec: |
          helm uninstall backstage -n $OPENSHIFT_NAMESPACE
    - name: Upload screenshot if failed
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: cypress-tests-failure-screenshots-${{ matrix.os }}
        path: ${{ github.workspace }}/app-test/cypress/screenshots
        retention-days: 14
    - name: Upload cypress video always - temporary
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: cypress-tests-videos-${{ matrix.os }}
        path: ${{ github.workspace }}/app-test/cypress/videos
        retention-days: 14
